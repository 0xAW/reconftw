#!/bin/bash

# Default config path
CONFIG_PATH="$RECONFTW_CFG"

# Check if the config file exists
if [ -f "$CONFIG_PATH" ]; then
    source "$CONFIG_PATH"
else
    echo "Error: reconftw.cfg not found at $CONFIG_PATH!"
    exit 1
fi

# Help menu
function help_menu() {
    echo -e "Usage: ./github_dorks_script.sh [OPTIONS] [DOMAIN]"
    echo -e "Options:"
    echo -e "  -d, --domain DOMAIN       Specify the domain"
    echo -e "  -g, --github-tokens FILE  Specify the path to the GitHub tokens file"
    echo -e "  -D, --deep                Use deep dorking (optional)"
    echo -e "  -h, --help                Display this help menu"
    exit 1
}

# Main function
function github_dorks() {
    if [ -s "${github_tokens}" ]; then
        local dorks_file="$tools/gitdorks_go/Dorks/smalldorks.txt"
        [ "$deep" = true ] && dorks_file="$tools/gitdorks_go/Dorks/medium_dorks.txt"
            gitdorks_go -gd "$dorks_file" -nws 20 -target "$domain" -tf "${github_tokens}" -ew 3 || { echo "gitdorks_go/anew command failed" >&2; exit 1; }
        else
            echo -e "${bred}Required file ${github_tokens} not exists or empty${reset}" >&2
        fi
}

# Default values
domain=""
github_tokens=""
deep=false

# Parse command-line arguments
while [[ "$#" -gt 0 ]]; do
    case $1 in
        -d|--domain) domain="$2"; shift ;;
        -g|--github-tokens) github_tokens="$2"; shift ;;
        -D|--deep) deep=true ;;
        -h|--help) help_menu ;;
        *) 
            if [ -z "$domain" ]; then
                domain="$1"
            else
                echo -e "${bred}Unknown parameter passed: $1${reset}" >&2; help_menu
            fi
            ;;
    esac
    shift
done

# Validate inputs
if [ -z "$domain" ] || [ -z "$github_tokens" ]; then
    echo -e "${bred}Error: Missing required parameters.${reset}" >&2
    help_menu
    exit 1
fi

# Execute the main function
github_dorks